package com.cg.inventory.services;

import java.util.List;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.cg.inventory.exceptions.OrderNotFoundException;
import com.cg.inventory.model.Order;
import com.cg.inventory.repositories.OrdersRepository;

@Transactional(rollbackFor = Exception.class)
@Service
public class OrderServiceImpl implements OrderService {

	@Autowired
	private OrdersRepository ordersRepository;

	@Override
	public List<Order> viewAllOrders() {
		return ordersRepository.findAll();
	}

	@Override
	public Order createOrder(Order order) {
		return ordersRepository.saveAndFlush(order);
	}

	@Override
	public void deleteOrder(Long orderId) {
		ordersRepository.deleteById(orderId);
	}

	@Override
	public Order viewOrderById(Long orderId) {
		return ordersRepository.findById(orderId)
				.orElseThrow(() -> new OrderNotFoundException("Order not found for this Id : " + orderId));
	}

	@Override
	public Order updateOrder(Long orderId, Order order) {
		Order existingOrder = ordersRepository.findById(orderId)
				.orElseThrow(() -> new OrderNotFoundException("Order not found for this Id : " + orderId));
		BeanUtils.copyProperties(order, existingOrder, "orderId");
		return ordersRepository.saveAndFlush(existingOrder);
	}
}
